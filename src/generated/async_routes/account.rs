// DO NOT EDIT
// This file was @generated by Stone

#![allow(
    clippy::too_many_arguments,
    clippy::large_enum_variant,
    clippy::result_large_err,
    clippy::doc_markdown,
)]

#[allow(unused_imports)]
pub use crate::generated::types::account::*;

/// Sets a user's profile photo.
pub fn set_profile_photo<'a>(
    client: &'a impl crate::async_client_trait::UserAuthClient,
    arg: &'a SetProfilePhotoArg,
) -> impl std::future::Future<Output=Result<SetProfilePhotoResult, crate::Error<SetProfilePhotoError>>> + Send + 'a {
    crate::client_helpers::request(
        client,
        crate::client_trait_common::Endpoint::Api,
        crate::client_trait_common::Style::Rpc,
        "account/set_profile_photo",
        arg,
        None)
}

