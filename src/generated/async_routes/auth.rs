// DO NOT EDIT
// This file was @generated by Stone

#![allow(
    clippy::too_many_arguments,
    clippy::large_enum_variant,
    clippy::result_large_err,
    clippy::doc_markdown,
)]

#[allow(unused_imports)]
pub use crate::generated::types::auth::*;

/// Creates an OAuth 2.0 access token from the supplied OAuth 1.0 access token.
#[deprecated]
pub fn token_from_oauth1<'a>(
    client: &'a impl crate::async_client_trait::AppAuthClient,
    arg: &'a TokenFromOAuth1Arg,
) -> impl std::future::Future<Output=Result<TokenFromOAuth1Result, crate::Error<TokenFromOAuth1Error>>> + Send + 'a {
    crate::client_helpers::request(
        client,
        crate::client_trait_common::Endpoint::Api,
        crate::client_trait_common::Style::Rpc,
        "auth/token/from_oauth1",
        arg,
        None)
}

/// Disables the access token used to authenticate the call. If there is a corresponding refresh
/// token for the access token, this disables that refresh token, as well as any other access tokens
/// for that refresh token.
pub fn token_revoke(
    client: &impl crate::async_client_trait::UserAuthClient,
) -> impl std::future::Future<Output=Result<(), crate::Error<crate::NoError>>> + Send + '_ {
    crate::client_helpers::request(
        client,
        crate::client_trait_common::Endpoint::Api,
        crate::client_trait_common::Style::Rpc,
        "auth/token/revoke",
        &(),
        None)
}

