[package]
name = "dropbox-sdk"
version = "0.19.0-beta2"
authors = ["Bill Fraser <wfraser@dropbox.com>"]
edition = "2018"
description = "Rust bindings to the Dropbox API, generated by Stone from the official spec."
categories = ["api-bindings"]
keywords = ["dropbox", "sdk", "cloud", "storage"]
repository = "https://github.com/dropbox/dropbox-sdk-rust"
license = "Apache-2.0"
readme = "README.md"

[package.metadata]
# Keep this at least 1 year old.
# (or not... 1.75 is required for "-> impl Trait" sadly)
msrv = "1.75.0" # Dec 28, 2023

[dependencies]
async-lock = "3.3.0"
atty = "0.2.14"
base64 = "0.22"
bytes = "1.6.0"
log = "0.4"
ring = "0.17"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
url = "2.1"

[dependencies.futures]
version = "0.3.30"
default-features = false
features = ["std"]

[dependencies.reqwest]
version = "0.12.2"
optional = true
default-features = false
features = ["http2", "rustls-tls", "stream"]

[dependencies.ureq]
version = "2.5.0"
optional = true
default-features = false
features = ["tls"]

[dev-dependencies]
env_logger = "0.11"
chrono = "0.4"
parallel_reader = "0.1"
threadpool = "1.8"

[dev-dependencies.tokio]
version = "1.37.0"
features = ["rt-multi-thread", "macros", "io-std"]

[dev-dependencies.tokio-util]
version = "0.7.10"
default-features = false
features = ["compat"]

[[example]]
name = "demo"
required-features = ["dbx_files", "default_client"]

[[example]]
name = "large-file-upload"
required-features = ["dbx_files", "default_client"]

[[example]]
name = "demo-async"
required-features = ["dbx_files", "default_async_client"]

[features]
# dbx_* features each correspond to one Stone spec file.
# The lists of dependencies must be kept in sync with the 'import' statements in them.
dbx_account = ["dbx_common"]
dbx_async = []
dbx_auth = ["dbx_common"]
dbx_check = ["dbx_common"]
dbx_common = []
dbx_contacts = ["dbx_common"]
dbx_file_properties = []
dbx_file_requests = ["dbx_common", "dbx_files"]
dbx_files = ["dbx_async", "dbx_auth", "dbx_common", "dbx_file_properties", "dbx_users_common"]
dbx_openid = ["dbx_common"]
dbx_paper = ["dbx_common", "dbx_sharing"]
dbx_secondary_emails = ["dbx_common"]
dbx_seen_state = []
dbx_sharing = ["dbx_async", "dbx_common", "dbx_files", "dbx_seen_state", "dbx_team_common", "dbx_users", "dbx_users_common"]
dbx_team = ["dbx_account", "dbx_async", "dbx_common", "dbx_file_properties", "dbx_files", "dbx_secondary_emails", "dbx_team_common", "dbx_team_policies", "dbx_users", "dbx_users_common"]
dbx_team_common = ["dbx_common"]
dbx_team_log = ["dbx_async", "dbx_common", "dbx_file_requests", "dbx_files", "dbx_sharing", "dbx_team", "dbx_team_common", "dbx_team_policies", "dbx_users_common"]
dbx_team_policies = []
dbx_users = ["dbx_common", "dbx_team_common", "dbx_team_policies", "dbx_users_common"]
dbx_users_common = ["dbx_common"]

default_async_client = ["async_routes", "dep:reqwest"]
default_client = ["sync_routes", "sync_routes_in_root", "dep:ureq"]

# Enable unstable ("preview") API routes.
unstable = []

# Enable sync routes under `dropbox_sdk::routes::{namespace}`
sync_routes = []

# Enable async routes under `dropbox_sdk::async_routes::{namespace}`
async_routes = []

# Re-export the sync routes as `dropbox_sdk::{namsepace}` directly (matches pre-v0.19 structure).
# If disabled, export the async routes there instead.
sync_routes_in_root = ["sync_routes"]

# Include all namespaces by default.
# Enable sync default client, sync routes, and make the sync routes default, to match pre-v0.19.
default = [
    "dbx_account",
    "dbx_async",
    "dbx_auth",
    "dbx_check",
    "dbx_common",
    "dbx_contacts",
    "dbx_file_properties",
    "dbx_file_requests",
    "dbx_files",
    "dbx_openid",
    "dbx_paper",
    "dbx_secondary_emails",
    "dbx_seen_state",
    "dbx_sharing",
    "dbx_team",
    "dbx_team_common",
    "dbx_team_log",
    "dbx_team_policies",
    "dbx_users",
    "dbx_users_common",
    "default_client",
    "sync_routes",
    "sync_routes_in_root",
    ]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
